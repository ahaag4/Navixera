// === Smart Vehicle Tracker with Offline Backup ===
// üîß NodeMCU + GPS (NEO-6M) + Motion Sensor + Buzzer + Firebase + SPIFFS

#include <ESP8266WiFi.h>
#include <FirebaseArduino.h>
#include <SoftwareSerial.h>
#include <TinyGPS++.h>
#include <FS.h>
#include <time.h>

// ==== WiFi & Firebase ====
#define WIFI_SSID     "Your_WiFi_Name"
#define WIFI_PASSWORD "Your_WiFi_Password"
#define FIREBASE_HOST "svms-c0232-default-rtdb.firebaseio.com"
#define FIREBASE_AUTH "AIzaSyCn9YSO4-ksWl6JBqIcEEuLx2EJN8jMj4M"
#define USER_ID       "<your-firebase-user-id>"  // Replace with actual UID

// ==== Pin Configuration ====
#define GPS_RX D5
#define GPS_TX D6
#define MOTION_SENSOR D7
#define BUZZER D8

// ==== Modules ====
SoftwareSerial gpsSerial(GPS_RX, GPS_TX);
TinyGPSPlus gps;

double latitude, longitude;
String alarmState = "off";

void setup() {
  Serial.begin(9600);
  gpsSerial.begin(9600);
  pinMode(MOTION_SENSOR, INPUT);
  pinMode(BUZZER, OUTPUT);
  digitalWrite(BUZZER, LOW);

  SPIFFS.begin();

  connectWiFi();

  Firebase.begin(FIREBASE_HOST, FIREBASE_AUTH);
}

void loop() {
  readGPS();
  getAlarmStatusFromFirebase();
  handleMotionAndAlarm();
  handleLocationUpdate();
  delay(3000);
}

// ===============================
// ====== Helper Functions =======
// ===============================

void connectWiFi() {
  WiFi.begin(WIFI_SSID, WIFI_PASSWORD);
  Serial.print("Connecting to WiFi");
  int retry = 0;
  while (WiFi.status() != WL_CONNECTED && retry < 30) {
    delay(500); Serial.print(".");
    retry++;
  }

  if (WiFi.status() == WL_CONNECTED) {
    Serial.println("\n‚úÖ WiFi Connected");
  } else {
    Serial.println("\n‚ùå Failed to connect WiFi");
  }
}

void readGPS() {
  while (gpsSerial.available()) {
    char c = gpsSerial.read();
    gps.encode(c);
    if (gps.location.isUpdated()) {
      latitude = gps.location.lat();
      longitude = gps.location.lng();
      Serial.printf("üìç Location: %.6f, %.6f\n", latitude, longitude);
    }
  }
}

void getAlarmStatusFromFirebase() {
  if (WiFi.status() == WL_CONNECTED) {
    String path = "/users/" + String(USER_ID) + "/vehicle/alarm";
    alarmState = Firebase.getString(path);
    Serial.println("üîî Alarm State: " + alarmState);
  }
}

void handleMotionAndAlarm() {
  if (digitalRead(MOTION_SENSOR) == HIGH && alarmState == "on") {
    digitalWrite(BUZZER, HIGH);
    delay(500);
    digitalWrite(BUZZER, LOW);
    Serial.println("üö® Motion Detected - Alarm Triggered");

    if (WiFi.status() == WL_CONNECTED) {
      Firebase.setString("/users/" + String(USER_ID) + "/vehicle/alarm_triggered", getTimestamp());
    } else {
      saveOfflineLog("motion_alarm_triggered", getTimestamp());
    }
  }
}

void handleLocationUpdate() {
  if (latitude != 0 && longitude != 0) {
    String locStr = String(latitude, 6) + "," + String(longitude, 6);
    String timeNow = getTimestamp();

    if (WiFi.status() == WL_CONNECTED) {
      uploadOfflineLogs(); // first upload any old logs

      String base = "/users/" + String(USER_ID) + "/vehicle";
      Firebase.setFloat(base + "/current/latitude", latitude);
      Firebase.setFloat(base + "/current/longitude", longitude);
      Firebase.setString(base + "/current/location", locStr);
      Firebase.setString(base + "/current/status", "Moving");
      Firebase.setString(base + "/current/last_active", timeNow);

      FirebaseJson history;
      history.set("location", locStr);
      history.set("time", timeNow);
      Firebase.pushJSON(base + "/history", history);

      Serial.println("‚úÖ Location uploaded to Firebase");
    } else {
      saveOfflineLog(locStr, timeNow);
      Serial.println("üì¶ Location saved offline");
    }
  }
}

String getTimestamp() {
  time_t now = time(nullptr);
  struct tm* t = localtime(&now);
  char buffer[25];
  sprintf(buffer, "%04d-%02d-%02d %02d:%02d",
          t->tm_year + 1900, t->tm_mon + 1,
          t->tm_mday, t->tm_hour, t->tm_min);
  return String(buffer);
}

void saveOfflineLog(String location, String timeStr) {
  File file = SPIFFS.open("/offline.txt", "a+");
  if (file) {
    file.println(location + "," + timeStr);
    file.close();
  }
}

void uploadOfflineLogs() {
  File file = SPIFFS.open("/offline.txt", "r");
  if (!file) return;

  while (file.available()) {
    String line = file.readStringUntil('\n');
    int lastComma = line.lastIndexOf(',');
    String location = line.substring(0, lastComma);
    String timeStr = line.substring(lastComma + 1);

    FirebaseJson history;
    history.set("location", location);
    history.set("time", timeStr);
    Firebase.pushJSON("/users/" + String(USER_ID) + "/vehicle/history", history);
    delay(100);
  }

  file.close();
  SPIFFS.remove("/offline.txt"); // delete after upload
  Serial.println("‚òÅÔ∏è Offline data uploaded");
}
